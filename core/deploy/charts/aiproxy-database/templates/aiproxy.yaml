apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    sealos-db-provider-cr: {{.Values.pgsql.name}}
    app.kubernetes.io/instance: {{.Values.pgsql.name}}
    app.kubernetes.io/managed-by: kbcli
  name: {{.Values.pgsql.name}}
  namespace: {{.Release.Namespace}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    sealos-db-provider-cr: {{.Values.pgsql.name}}
    app.kubernetes.io/instance: {{.Values.pgsql.name}}
    app.kubernetes.io/managed-by: kbcli
  name: {{.Values.pgsql.name}}
  namespace: {{.Release.Namespace}}
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    sealos-db-provider-cr: {{.Values.pgsql.name}}
    app.kubernetes.io/instance: {{.Values.pgsql.name}}
    app.kubernetes.io/managed-by: kbcli
  name: {{.Values.pgsql.name}}
  namespace: {{.Release.Namespace}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{.Values.pgsql.name}}
subjects:
  - kind: ServiceAccount
    name: {{.Values.pgsql.name}}
    namespace: {{.Release.Namespace}}
---
apiVersion: apps.kubeblocks.io/v1alpha1
kind: Cluster
metadata:
  labels:
    clusterdefinition.kubeblocks.io/name: postgresql
    clusterversion.kubeblocks.io/name: {{ .Values.pgsql.version }}
  name: {{.Values.pgsql.name}}
  namespace: {{.Release.Namespace}}
spec:
  affinity:
    nodeLabels: { }
    podAntiAffinity: Preferred
    tenancy: SharedNode
    topologyKeys:
      - kubernetes.io/hostname
  backup:
    cronExpression: {{.Values.pgsql.backup.cron}}
    enabled: true
    method: dump
    pitrEnabled: true
    retentionPeriod: {{.Values.pgsql.backup.retentionPeriod}}
  clusterDefinitionRef: postgresql
  clusterVersionRef: {{ .Values.pgsql.version }}
  componentSpecs:
    - componentDefRef: postgresql
      monitor: true
      name: postgresql
      replicas: {{ .Values.pgsql.replicas }}
      resources: {{ toYaml .Values.pgsql.resources | nindent 8 }}
      serviceAccountName: {{.Values.pgsql.name}}
      switchPolicy:
        type: Noop
      volumeClaimTemplates:
        - name: data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.pgsql.storage }}
  terminationPolicy: Delete
